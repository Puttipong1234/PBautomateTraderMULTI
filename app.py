from flask import Flask , request
from trade import CCXT_OPEN_LONG , CCXT_OPEN_SHORT , CCXT_TPSL_LONG , CCXT_TPSL_SHORT , Checkuser

app = Flask(__name__)

@app.route("/") # add path url
def hello_world():
    return "Hello, World!"

@app.route("/webhook")
def webhook():
    return "This is url for webhook!"

@app.route("/setup")
def setup():
    res = Checkuser()
    return str(res) , 200

@app.route("/signals",methods=['POST'])
def signals():
    print("Someone Post Signals to me !")
    import json
    signal = request.data.decode("utf-8")
    signal = json.loads(signal) # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å json ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô dictionary

    trade_side = str(signal["ACTION"])
    
    trade_side = trade_side.split(" ")[0] + " " + trade_side.split(" ")[1] # TPSL + LONG
    partial_size = 100
    if len(str(signal["ACTION"]).split(" ")) == 3:
        partial_size = float(str(signal["ACTION"]).split(" ")[2]) # 100 25 .....33.33
    
    
    amount_coin = float(signal["AMOUNT_COIN"])
    amount_usdt = float(signal["AMOUNT_USDT"])
    leverage = signal["LEV"]
    symbol = signal["SYMBOL"]
    password = signal["PASSWORD"]
    factor = float(signal["FACTOR"])
    
    if password != os.getenv("PASSWORD"):
        print("WRONG PASSWORD")
        return "403"

    
    print("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢ ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ.....")
    print("trade_side : " ,trade_side)
    print("partial_size : ",partial_size)
    print("amount_coin : ",amount_coin)
    print("leverage : ",leverage)
    print("symbol : ",symbol)
    print("‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà ‡πÑ‡∏ö‡πÅ‡∏ô‡∏ô.....")

    message = f"ü§ñü§ñü§ñü§ñü§ñü§ñü§ñ\n‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢ \n-‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î {trade_side} {symbol}\n-‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î {amount_coin} \n-‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå {leverage}\nü§ñü§ñü§ñü§ñü§ñü§ñü§ñ"
    # Line notify Process
    from line_notify import LineNotify
    Access_Token = os.getenv("LINE_NOTIFY_API") # generate line notify

    # ‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì SPOT 
    from trade import buy , sell
    if trade_side == "OPEN LONG" and leverage == 0: # if leverage = 0 => trade spot
        buy(symbol=symbol,amount_coin=amount_coin) # ‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏ö‡∏ö market
    
    elif trade_side == "TPSL LONG" and leverage == 0: # if leverage = 0 => trade spot
        sell(symbol=symbol,amount_coin=amount_coin) # ‡∏Ç‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö takeprofit stoploss
    
    # ‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì FUTURE
    # from trade import OPEN_LONG , OPEN_SHORT , TPSL_LONG , TPSL_SHORT
    
    # ‡∏£‡∏±‡∏ö‡πÅ‡∏ö‡∏ö future Cross Mode
    
    # INPUT ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ ‡∏à‡∏∞‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πâ‡∏•‡∏∞‡∏Å‡∏µ‡πà‡∏î‡∏≠‡∏•
    AMOUT_USDT = amount_usdt # USER SETTING FUTURE 
    
    # open long
    if trade_side == "OPEN LONG" and "PB" in leverage:
        # OPEN_LONG(symbol=symbol, amount_usdt=AMOUT_USDT, leverage=leverage)
        message = message + CCXT_OPEN_LONG(symbol, amount_coin, factor)
    
    # tpsl long
    elif trade_side == "TPSL LONG" and "PB" in leverage:
        # TPSL_LONG(symbol=symbol)
        amount_coin = (partial_size/100) * amount_coin
        message = message + CCXT_TPSL_LONG(symbol, amount_coin, factor)
    
    # open short
    elif trade_side == "OPEN SHORT" and "PB" in leverage:
        # OPEN_SHORT(symbol=symbol, amount_usdt=AMOUT_USDT, leverage=leverage)
        message = message + CCXT_OPEN_SHORT(symbol, amount_coin, factor)
        
    # tpsl short
    elif trade_side == "TPSL SHORT" and "PB" in leverage:
        # TPSL_SHORT(symbol=symbol)
        amount_coin = (partial_size/100) * amount_coin
        message = message + CCXT_TPSL_SHORT(symbol, amount_coin, factor)
    
    notify = LineNotify(Access_Token)
    notify.send(message) # ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó
    
    return "200"

if __name__=="__main__":
    app.run() # ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ app run !